{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Introduction and Motivation Projectile motion is crucial in fields like sports, engineering, and defense. Understanding how launch angles affect range helps optimize performance in activities like basketball and javelin throwing, and informs designs in aerospace applications. Theoretical Foundation Projectile motion follows Newton\u2019s laws, with horizontal motion at constant velocity and vertical motion under gravity. The range depends on initial velocity and angle of projection , derived from kinematic equations. The key variables are: Initial velocity ( \\(v0\\) ) Angle of projection ( \\(\u03b8\\) ) Gravitational acceleration ( \\(g\\) ) The range formula is: \\[R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\] Range And Analysis Range is maximized at 45\u00b0 in ideal conditions. Real-world factors like air resistance , gravity variations , and terrain require computational simulations for accuracy. Higher velocity increases range, and lower gravity extends it, making this study crucial for sports, engineering, and aerospace applications. Practical Applications Projectile motion is crucial in sports , where athletes optimize angles for maximum range (e.g., soccer, basketball, javelin). In military and defense , accurate trajectory calculations improve targeting for artillery and missiles. In aerospace and engineering , projectile principles guide rocket launches, spacecraft trajectories, and planetary landings, requiring computational simulations for precision. Calculating Range at Different Angles Using the range formula : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Projectile range for angles 35\u00b0 and 45\u00b0 , with an initial velocity of 20 m/s and gravity \\( g = 10 \\) m/s\u00b2 . Example 1: Angle = 35\u00b0 \\[ R = \\frac{20^2 \\sin(70\u00b0)}{10} \\] \\[ R = \\frac{400 \\times 0.9397}{10} \\] \\[ R = \\frac{375.88}{10} = 37.6 \\text{ m} \\] Example 2: Angle = 45\u00b0 (Optimal Angle) \\[ R = \\frac{20^2 \\sin(90\u00b0)}{10} \\] \\[ R = \\frac{400 \\times 1}{10} \\] \\[ R = \\frac{400}{10} = 40 \\text{ m} \\] These results show that 45\u00b0 gives the maximum range , while 35\u00b0 has a slightly shorter range . Python script to compute and plot the range import numpy as np import matplotlib.pyplot as plt # Constants g = 10 # Acceleration due to gravity (m/s\u00b2) v0 = 20 # Initial velocity (m/s) # Angle (45 degrees) angle = 45 angle_rad = np.radians(angle) # Convert to radians # Time of flight calculation t_flight = 2 * v0 * np.sin(angle_rad) / g # Time intervals for the projectile motion t = np.linspace(0, t_flight, num=100) # Calculate x and y positions of the projectile x = v0 * np.cos(angle_rad) * t y = v0 * np.sin(angle_rad) * t - 0.5 * g * t**2 # Plot the trajectory plt.figure(figsize=(8, 5)) plt.plot(x, y, label=f'Projectile at {angle}\u00b0', color=\"b\") plt.axhline(0, color=\"black\",linewidth=1) # Ground level plt.axvline(x=max(x), linestyle=\"--\", color=\"r\", label=f\"Range = {max(x):.2f} m\") # Labels and title plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.title(f\"Projectile Motion at {angle}\u00b0 with Initial Velocity {v0} m/s\") plt.legend() plt.grid(True) plt.show() Conclusion This study demonstrates that the range of a projectile is significantly influenced by the launch angle, with 45\u00b0 yielding the maximum range under ideal conditions. By exploring projectile motion through theoretical calculations and visualizations, we gain valuable insights applicable to sports, engineering, and defense. While the model assumes ideal conditions, real-world factors such as air resistance and terrain can alter the trajectory. Future studies could expand on this by incorporating these factors for more accurate predictions. Source Colab Python Computation","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#introduction-and-motivation","text":"Projectile motion is crucial in fields like sports, engineering, and defense. Understanding how launch angles affect range helps optimize performance in activities like basketball and javelin throwing, and informs designs in aerospace applications.","title":"Introduction and Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"Projectile motion follows Newton\u2019s laws, with horizontal motion at constant velocity and vertical motion under gravity. The range depends on initial velocity and angle of projection , derived from kinematic equations. The key variables are: Initial velocity ( \\(v0\\) ) Angle of projection ( \\(\u03b8\\) ) Gravitational acceleration ( \\(g\\) ) The range formula is: \\[R = \\frac{v_0^2 \\sin(2\\theta)}{g}\\]","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-and-analysis","text":"Range is maximized at 45\u00b0 in ideal conditions. Real-world factors like air resistance , gravity variations , and terrain require computational simulations for accuracy. Higher velocity increases range, and lower gravity extends it, making this study crucial for sports, engineering, and aerospace applications.","title":"Range And Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"Projectile motion is crucial in sports , where athletes optimize angles for maximum range (e.g., soccer, basketball, javelin). In military and defense , accurate trajectory calculations improve targeting for artillery and missiles. In aerospace and engineering , projectile principles guide rocket launches, spacecraft trajectories, and planetary landings, requiring computational simulations for precision.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#calculating-range-at-different-angles","text":"Using the range formula : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Projectile range for angles 35\u00b0 and 45\u00b0 , with an initial velocity of 20 m/s and gravity \\( g = 10 \\) m/s\u00b2 .","title":"Calculating Range at Different Angles"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-1-angle-35","text":"\\[ R = \\frac{20^2 \\sin(70\u00b0)}{10} \\] \\[ R = \\frac{400 \\times 0.9397}{10} \\] \\[ R = \\frac{375.88}{10} = 37.6 \\text{ m} \\]","title":"Example 1: Angle = 35\u00b0"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-2-angle-45-optimal-angle","text":"\\[ R = \\frac{20^2 \\sin(90\u00b0)}{10} \\] \\[ R = \\frac{400 \\times 1}{10} \\] \\[ R = \\frac{400}{10} = 40 \\text{ m} \\] These results show that 45\u00b0 gives the maximum range , while 35\u00b0 has a slightly shorter range .","title":"Example 2: Angle = 45\u00b0 (Optimal Angle)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-script-to-compute-and-plot-the-range","text":"import numpy as np import matplotlib.pyplot as plt # Constants g = 10 # Acceleration due to gravity (m/s\u00b2) v0 = 20 # Initial velocity (m/s) # Angle (45 degrees) angle = 45 angle_rad = np.radians(angle) # Convert to radians # Time of flight calculation t_flight = 2 * v0 * np.sin(angle_rad) / g # Time intervals for the projectile motion t = np.linspace(0, t_flight, num=100) # Calculate x and y positions of the projectile x = v0 * np.cos(angle_rad) * t y = v0 * np.sin(angle_rad) * t - 0.5 * g * t**2 # Plot the trajectory plt.figure(figsize=(8, 5)) plt.plot(x, y, label=f'Projectile at {angle}\u00b0', color=\"b\") plt.axhline(0, color=\"black\",linewidth=1) # Ground level plt.axvline(x=max(x), linestyle=\"--\", color=\"r\", label=f\"Range = {max(x):.2f} m\") # Labels and title plt.xlabel(\"Distance (m)\") plt.ylabel(\"Height (m)\") plt.title(f\"Projectile Motion at {angle}\u00b0 with Initial Velocity {v0} m/s\") plt.legend() plt.grid(True) plt.show()","title":"Python script to compute and plot the range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#conclusion","text":"This study demonstrates that the range of a projectile is significantly influenced by the launch angle, with 45\u00b0 yielding the maximum range under ideal conditions. By exploring projectile motion through theoretical calculations and visualizations, we gain valuable insights applicable to sports, engineering, and defense. While the model assumes ideal conditions, real-world factors such as air resistance and terrain can alter the trajectory. Future studies could expand on this by incorporating these factors for more accurate predictions.","title":"Conclusion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#source","text":"Colab Python Computation","title":"Source"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum 1. Theoretical Foundation The motion of a forced damped pendulum follows: \\[ \\ddot{\\theta} + b \\dot{\\theta} + c \\sin{\\theta} = A \\cos{(\\omega t)} \\] For small angles, \\(\\sin{\\theta} \\approx \\theta\\) , simplifying to: \\[ \\ddot{\\theta} + b \\dot{\\theta} + c \\theta = A \\cos{(\\omega t)} \\] Solution The homogeneous solution: \\[ \\theta_h (t) = e^{-\\frac{b}{2} t} (C_1 \\cos{\\omega_0 t} + C_2 \\sin{\\omega_0 t}) \\] where \\(\\omega_0 = \\sqrt{c - \\frac{b^2}{4}}\\) . For forced motion: \\[ \\theta_p (t) = \\frac{A}{\\sqrt{(c - \\omega^2)^2 + b^2 \\omega^2}} \\cos{(\\omega t - \\delta)} \\] with \\(\\tan{\\delta} = \\frac{b \\omega}{c - \\omega^2}\\) . Resonance Resonance occurs when: \\[ \\omega_r \\approx \\sqrt{c} \\] leading to maximum oscillation amplitude. 2. Analysis of Dynamics The motion of the forced damped pendulum depends on three key parameters: Damping coefficient ( \\(b\\) ): Higher damping reduces oscillations, leading to overdamped, underdamped, or critically damped motion. Driving amplitude ( \\(A\\) ): Controls the energy input, influencing the transition between periodic, quasiperiodic, and chaotic motion. Driving frequency ( \\(\\omega\\) ): Determines resonance conditions and phase synchronization. Regular vs. Chaotic Motion Low driving force & damping: The system exhibits periodic or quasiperiodic motion. High driving force & low damping: The pendulum transitions to chaotic motion , where small changes in initial conditions lead to vastly different outcomes. Poincar\u00e9 sections & bifurcation diagrams help visualize transitions from order to chaos. Physical Interpretations Energy Transfer: Damping dissipates energy, while external forcing replenishes it. Synchronization: At specific \\(\\omega\\) , the pendulum locks into phase with the driving force. Chaotic Behavior: Sensitive dependence on initial conditions, leading to unpredictable long-term motion. These dynamics apply to systems like suspension bridges, oscillating circuits, and climate models. 3. Practical Applications The forced damped pendulum model applies to various real-world systems, including: 1. Energy Harvesting Used in vibration energy harvesters to convert mechanical oscillations into electrical power. Example: Piezoelectric systems that harness ambient vibrations. 2. Suspension Bridges & Structural Engineering Explains resonance-induced failures , such as the Tacoma Narrows Bridge collapse . Helps design damping mechanisms to prevent destructive oscillations. 3. Oscillating Circuits Analogous to driven RLC circuits , where voltage and current oscillate under an external AC source. Used in radio tuning and signal processing . 4. Biomechanics & Robotics Models human gait and walking stability under external forces. Helps in designing prosthetics and robotic locomotion . 5. Climate & Planetary Motion Describes quasiperiodic variations in planetary orbits. Used in models of climate oscillations influenced by external periodic forces. These applications highlight the model\u2019s significance across physics, engineering, and biological systems. 4. Implementation To analyze the forced damped pendulum, a computational model is required. The following steps outline the implementation: 1. Numerical Simulation Solve the differential equation: \\( \\(\\ddot{\\theta} + b \\dot{\\theta} + c \\sin{\\theta} = A \\cos{(\\omega t)}\\) \\) Use Runge-Kutta methods for numerical integration. Simulate motion under different damping, forcing, and initial conditions. 2. Visualization Time Series Plots: Show angular displacement over time. Phase Portraits: Plot \\(\\dot{\\theta}\\) vs. \\(\\theta\\) to reveal stability and chaos. Poincar\u00e9 Sections: Sample phase space at regular intervals to detect periodicity. Bifurcation Diagrams: Track changes in behavior as parameters vary. Example snippet: from scipy.integrate import solve_ivp import numpy as np import matplotlib.pyplot as plt def pendulum(t, y, b, c, A, omega): theta, omega_dot = y return [omega_dot, -b * omega_dot - c * np.sin(theta) + A * np.cos(omega * t)] # Parameters b, c, A, omega = 0.2, 1.0, 0.5, 2.0 t_span = (0, 50) y0 = [0.1, 0] sol = solve_ivp(pendulum, t_span, y0, args=(b, c, A, omega), t_eval=np.linspace(0, 50, 1000)) # Plot results plt.plot(sol.t, sol.y[0]) plt.xlabel(\"Time\") plt.ylabel(\"Theta\") plt.title(\"Forced Damped Pendulum Motion\") plt.show() Source Link to Colab","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-theoretical-foundation","text":"The motion of a forced damped pendulum follows: \\[ \\ddot{\\theta} + b \\dot{\\theta} + c \\sin{\\theta} = A \\cos{(\\omega t)} \\] For small angles, \\(\\sin{\\theta} \\approx \\theta\\) , simplifying to: \\[ \\ddot{\\theta} + b \\dot{\\theta} + c \\theta = A \\cos{(\\omega t)} \\]","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solution","text":"The homogeneous solution: \\[ \\theta_h (t) = e^{-\\frac{b}{2} t} (C_1 \\cos{\\omega_0 t} + C_2 \\sin{\\omega_0 t}) \\] where \\(\\omega_0 = \\sqrt{c - \\frac{b^2}{4}}\\) . For forced motion: \\[ \\theta_p (t) = \\frac{A}{\\sqrt{(c - \\omega^2)^2 + b^2 \\omega^2}} \\cos{(\\omega t - \\delta)} \\] with \\(\\tan{\\delta} = \\frac{b \\omega}{c - \\omega^2}\\) .","title":"Solution"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance","text":"Resonance occurs when: \\[ \\omega_r \\approx \\sqrt{c} \\] leading to maximum oscillation amplitude.","title":"Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-analysis-of-dynamics","text":"The motion of the forced damped pendulum depends on three key parameters: Damping coefficient ( \\(b\\) ): Higher damping reduces oscillations, leading to overdamped, underdamped, or critically damped motion. Driving amplitude ( \\(A\\) ): Controls the energy input, influencing the transition between periodic, quasiperiodic, and chaotic motion. Driving frequency ( \\(\\omega\\) ): Determines resonance conditions and phase synchronization.","title":"2. Analysis of Dynamics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#regular-vs-chaotic-motion","text":"Low driving force & damping: The system exhibits periodic or quasiperiodic motion. High driving force & low damping: The pendulum transitions to chaotic motion , where small changes in initial conditions lead to vastly different outcomes. Poincar\u00e9 sections & bifurcation diagrams help visualize transitions from order to chaos.","title":"Regular vs. Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#physical-interpretations","text":"Energy Transfer: Damping dissipates energy, while external forcing replenishes it. Synchronization: At specific \\(\\omega\\) , the pendulum locks into phase with the driving force. Chaotic Behavior: Sensitive dependence on initial conditions, leading to unpredictable long-term motion. These dynamics apply to systems like suspension bridges, oscillating circuits, and climate models.","title":"Physical Interpretations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-practical-applications","text":"The forced damped pendulum model applies to various real-world systems, including:","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-energy-harvesting","text":"Used in vibration energy harvesters to convert mechanical oscillations into electrical power. Example: Piezoelectric systems that harness ambient vibrations.","title":"1. Energy Harvesting"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-suspension-bridges-structural-engineering","text":"Explains resonance-induced failures , such as the Tacoma Narrows Bridge collapse . Helps design damping mechanisms to prevent destructive oscillations.","title":"2. Suspension Bridges &amp; Structural Engineering"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-oscillating-circuits","text":"Analogous to driven RLC circuits , where voltage and current oscillate under an external AC source. Used in radio tuning and signal processing .","title":"3. Oscillating Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-biomechanics-robotics","text":"Models human gait and walking stability under external forces. Helps in designing prosthetics and robotic locomotion .","title":"4. Biomechanics &amp; Robotics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-climate-planetary-motion","text":"Describes quasiperiodic variations in planetary orbits. Used in models of climate oscillations influenced by external periodic forces. These applications highlight the model\u2019s significance across physics, engineering, and biological systems.","title":"5. Climate &amp; Planetary Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-implementation","text":"To analyze the forced damped pendulum, a computational model is required. The following steps outline the implementation:","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-numerical-simulation","text":"Solve the differential equation: \\( \\(\\ddot{\\theta} + b \\dot{\\theta} + c \\sin{\\theta} = A \\cos{(\\omega t)}\\) \\) Use Runge-Kutta methods for numerical integration. Simulate motion under different damping, forcing, and initial conditions.","title":"1. Numerical Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-visualization","text":"Time Series Plots: Show angular displacement over time. Phase Portraits: Plot \\(\\dot{\\theta}\\) vs. \\(\\theta\\) to reveal stability and chaos. Poincar\u00e9 Sections: Sample phase space at regular intervals to detect periodicity. Bifurcation Diagrams: Track changes in behavior as parameters vary.","title":"2. Visualization"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#example-snippet","text":"from scipy.integrate import solve_ivp import numpy as np import matplotlib.pyplot as plt def pendulum(t, y, b, c, A, omega): theta, omega_dot = y return [omega_dot, -b * omega_dot - c * np.sin(theta) + A * np.cos(omega * t)] # Parameters b, c, A, omega = 0.2, 1.0, 0.5, 2.0 t_span = (0, 50) y0 = [0.1, 0] sol = solve_ivp(pendulum, t_span, y0, args=(b, c, A, omega), t_eval=np.linspace(0, 50, 1000)) # Plot results plt.plot(sol.t, sol.y[0]) plt.xlabel(\"Time\") plt.ylabel(\"Theta\") plt.title(\"Forced Damped Pendulum Motion\") plt.show()","title":"Example snippet:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#source","text":"","title":"Source"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#link-to-colab","text":"","title":"Link to Colab"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}